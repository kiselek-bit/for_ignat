{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styles","wrapper","src","avatar","message","name","message_data","time","messageData","HW1","SuperButton","red","restProps","finalClassName","s","default","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","value","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","Greeting","setNameCallback","addUser","totalUsers","onKeyPressCallback","inputClass","GreetingContainer","users","addUserCallback","setName","setError","trim","alert","length","HW3","setUsers","newUser","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7c969966.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__dFZF8\",\"message\":\"Message_message__ckRWj\",\"name\":\"Message_name__3qVfR\",\"time\":\"Message_time__3ICSL\",\"message_data\":\"Message_message_data__mGWx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1N-wr\",\"errorInput\":\"SuperInputText_errorInput__3g0P6\",\"error\":\"SuperInputText_error__2UIQn\",\"span\":\"SuperInputText_span__24duA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__yduVG\",\"red\":\"SuperButton_red__3GMe1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1A1Im\",\"column\":\"HW4_column__1U__M\",\"button\":\"HW4_button__1lsiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1t21x\",\"spanClassName\":\"SuperCheckbox_spanClassName__3CJJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2sxd3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__O5z21\",\"error\":\"Greeting_error__1zZXO\"};","import React from \"react\";\r\nimport styles from './Message.module.css'\r\n\r\ntype MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nexport function Message(props: MessageType) {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <img src={props.avatar}/>\r\n            <div className={styles.message}>\r\n                <div className={styles.name}>\r\n                    {props.name}\r\n                </div>\r\n                <div className={styles.message_data}>\r\n                    {props.message}\r\n                </div>\r\n                <div className={styles.time}>\r\n                    {props.time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Ignat\",\r\n    message: \"Hello! \\n\" +\r\n        \"I'll teach you coding!\",\r\n    time: \"22:00\",\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType;\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};// need to fix\r\n\r\n    return (\r\n        <div>\r\n            {props.affair.name}\r\n\r\n            <SuperButton onClick={deleteCallback} red={true}>X</SuperButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, DefaultAffairsTypes, FilterType} from \"./HW2\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: DefaultAffairsTypes\r\n    setFilter: (value: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')};\r\n    const setHigh = () => {props.setFilter('high')};\r\n    const setMiddle = () => {props.setFilter('middle')};\r\n    const setLow = () => {props.setFilter('low')};\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <SuperButton onClick={setAll}>All</SuperButton>\r\n            <SuperButton onClick={setHigh}>High</SuperButton>\r\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\r\n            <SuperButton onClick={setLow}>Low</SuperButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low';\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n};\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\nexport type DefaultAffairsTypes = Array<AffairType>\r\n\r\n// constants\r\nlet defaultAffairs: DefaultAffairsTypes = [\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: DefaultAffairsTypes, filter: string): any => { // need to fix any\r\n\r\n    if (filter === \"all\")\r\n        return affairs;\r\n    else if (filter === 'high')\r\n         return affairs.filter(a => a.priority === filter)\r\n    else if(filter === 'middle')\r\n        return affairs.filter(a => a.priority === filter)\r\n    else if (filter === 'low')\r\n        return affairs.filter(a => a.priority === filter); // need to fix\r\n}\r\nexport const deleteAffair = (affairs: DefaultAffairsTypes, _id: number): DefaultAffairsTypes => { // need to fix any\r\n        affairs = affairs.filter(a => a._id !== _id)\r\n    return affairs;\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState <DefaultAffairsTypes>(defaultAffairs);\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\r\n\r\n    function setFilterFunction (value: FilterType) {\r\n        setFilter(value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilterFunction}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error? s.errorInput: s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    onKeyPressCallback: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onKeyPressCallback} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error && s.error; // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <SuperInputText\r\n                value={name}\r\n                onChange={setNameCallback}\r\n                className={inputClass}\r\n                onKeyPress={onKeyPressCallback}\r\n                error={error}\r\n            />\r\n            <span>{error}</span>\r\n            <SuperButton onClick={addUser} red={false}>add</SuperButton>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    let [name, setName] = useState<string>(\"\"); // need to fix any\r\n    const [error, setError] = useState<string>(\"\"); // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value); // need to fix\r\n        setError('')\r\n    };\r\n    const addUser = () => {\r\n        if (name.trim() === '') {\r\n            setError('Error')\r\n            setName('')\r\n            return\r\n        }\r\n        name = name.trim()\r\n        addUserCallback(name)\r\n        alert(`Hello  ${name}!`); // need to fix\r\n        setName('')\r\n\r\n    };\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\" && name !== \"\") {\r\n            addUser()\r\n        } else {\r\n            setError('Error')\r\n        }\r\n    }\r\n    const totalUsers = users.length; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onKeyPressCallback={onKeyPressCallback}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let newUser = {_id: v1(), name: name}\r\n        return setUsers([newUser, ...users]); // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red={false}// пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}